//[session.idusuario|Untyped,session.db|Untyped,session.idempresa|Untyped,configuracion|Text]
--select
DECLARE @idusuario VARCHAR(MAX)
DECLARE @idempresa VARCHAR(MAX)
DECLARE @configuracion VARCHAR(MAX)
DECLARE @numeroIncons INT
DECLARE @CONTADOR VARCHAR(MAX)

DECLARE @CATEGORIA INT
DECLARE @IDS INT

SET @idusuario = <#session.idusuario/>
SET @idempresa = <#session.idempresa/>
set @configuracion = isnull(:configuracion,'')

DECLARE @TMP_ID_INCONS1 TABLE(IDS INT)
DECLARE @TMP_ID_INCONS2 TABLE(ID INT IDENTITY,IDS INT)


INSERT INTO @TMP_ID_INCONS1
SELECT IDINCONSISTENCIA FROM <#SESSION.DB/>.DBO.FN_INCONSISTENCIASACTIVAS(<#session.idempresa/>,<#session.idusuario/>,1)

INSERT INTO @TMP_ID_INCONS1
SELECT IDINCONSISTENCIA FROM <#SESSION.DB/>.DBO.FN_INCONSISTENCIASACTIVAS(<#session.idempresa/>,<#session.idusuario/>,2)

UPDATE <#SESSION.DB/>.dbo.REGISTRO_INCONSISTENCIA_CONFIGURACION SET CONFIGURACION = @configuracion WHERE idempresa = @idempresa; 

INSERT INTO @TMP_ID_INCONS2(IDS)
SELECT IDINCONSISTENCIA FROM <#SESSION.DB/>.DBO.FN_INCONSISTENCIASACTIVAS(<#session.idempresa/>,<#session.idusuario/>,1)
WHERE IDINCONSISTENCIA NOT IN (SELECT IDS FROM @TMP_ID_INCONS1)

INSERT INTO @TMP_ID_INCONS2(IDS)
SELECT IDINCONSISTENCIA FROM <#SESSION.DB/>.DBO.FN_INCONSISTENCIASACTIVAS(<#session.idempresa/>,<#session.idusuario/>,2)
WHERE IDINCONSISTENCIA NOT IN (SELECT IDS FROM @TMP_ID_INCONS1)

SELECT @numeroIncons = count(1) FROM @TMP_ID_INCONS2
SET @CONTADOR = 1
WHILE(@CONTADOR <= @numeroIncons AND @numeroIncons != 0)
BEGIN
	SELECT @CATEGORIA = TI.CATEGORIA, @IDS = N.IDS FROM @TMP_ID_INCONS2 N INNER JOIN SALESUP_CT.DBO.TIPOS_INCONSISTENCIA TI ON TI.IDINCONSISTENCIA = N.IDS WHERE N.ID = @CONTADOR  
	EXEC <#SESSION.DB/>.DBO.SP_ACTUALIZA_INCONSISTENCIA @IDS,@CATEGORIA, @idempresa
	SET @CONTADOR = @CONTADOR + 1 
END

SELECT @numeroIncons AS CONT
select @numeroIncons, @CONTADOR
